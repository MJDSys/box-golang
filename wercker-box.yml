name: golang-riak
version: 0.0.1
inherits: wercker/ubuntu12.04-webessentials@0.0.3
type : main
platform : ubuntu@12.04
description : golang
keywords:
  - golang
  - go
packages :
  - golang@1.1.1
  - git
  - mercurial
  - bzr
  - riak
script : |
  curl http://apt.basho.com/gpg/basho.apt.key | sudo apt-key add -
  sudo bash -c "echo deb http://apt.basho.com $(lsb_release -sc) main > /etc/apt/sources.list.d/basho.list"
  sudo apt-get update
  sudo apt-get install riak
  sudo apt-get install bzr
  sudo apt-get install mercurial
  wget https://go.googlecode.com/files/go1.1.linux-amd64.tar.gz
  sudo tar -C /usr/local -xzf go1.1.linux-amd64.tar.gz
  echo "export PATH=$PATH:/usr/local/go/bin" | sudo tee -a /etc/profile
  rm go1.1.linux-amd64.tar.gz
  sudo sed -e 's/_bitcask_/_eleveldb_/' /etc/riak/app.config -i
  sudo service riak start
  sleep 10

box-detect:
  priority : 900
  version :
  detect:
    - files:
      - .godir

default-build:
  python:
    priority : 50
    detect:
      - default: true
    text-to-append: |
      # Build definition
      build:
        # The steps that will be executed on build
        steps:
          - script:
              name: setup golang
              code: |
                mkdir $HOME/mygo
                export GOPATH=$HOME/mygo
                export PATH=$PATH:$GOPATH/bin
                mkdir $GOPATH/bin
                mkdir $GOPATH/pkg
                if test "${WERCKER_GIT_REPOSITORY+set}" == set; then mkdir -p "$GOPATH/src/$WERCKER_GIT_DOMAIN/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY"; else ln -s $WERCKER_SOURCE_DIR $GOPATH/src; fi
                if test "${WERCKER_GIT_REPOSITORY+set}" == set; then cp -R $WERCKER_SOURCE_DIR/* "$GOPATH/src/$WERCKER_GIT_DOMAIN/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY"; fi
                if test "${WERCKER_GIT_REPOSITORY+set}" == set; then export WERCKER_SOURCE_DIR="$GOPATH/src/$WERCKER_GIT_DOMAIN/$WERCKER_GIT_OWNER/$WERCKER_GIT_REPOSITORY"; fi
          - script:
              name: go get
              code: |
                cd $WERCKER_SOURCE_DIR
                go version
                go get ./...
                if test "${GOLANG_EXTRA_REPOS}" == set; then go get ${GOLANG_EXTRA_REPOS}; fi
          - script:
              name: go build
              code: |
                go build .
          - script:
              name: go test
              code: |
                go test -v -test.bench=".*" ./...
